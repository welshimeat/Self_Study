#include <iostream>
using namespace std;

int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int tetromino[19][4][2] = { {{0, 0}, {0, 1}, {0, 2}, {0, 3}}, {{0, 0}, {1, 0}, {2, 0}, {3, 0}}, {{0, 0}, {0, 1}, {1, 0}, {1, 1}}, {{0, 0}, {0, 1}, {0, 2}, {1, 1}}, {{1, -1}, {0, 0}, {1, 0}, {2, 0}}, { {-1, 1}, {0, 1}, {0, 2}, {0, 0} }, { {0, 0}, {1, 0}, {2, 0}, {1, 1} },
		{{0, 0}, {1, 0}, {2, 0}, {2, 1}}, {{0, 0}, {0, 1}, {0, 2}, {1, 0}}, {{0, 0}, {0, 1}, {1, 1}, {2, 1}}, {{0, 0}, {0, 1}, {0, 2}, {-1, 2}}, {{0, 0}, {1, 0}, {1, 1}, {2, 1}}, {{0, 0}, {0, 1}, {-1, 1}, {-1, 2}},
		{{0, 0}, {0, 1}, {-1, 1}, {-2, 1}}, {{0, 0}, {-1, 0}, {0, 1}, {0, 2}}, {{0, 0}, {0, 1}, {1, 0}, {2, 0}}, {{0, 0}, {0, 1}, {0, 2}, {1, 2}}, {{0, 0}, {1, 0}, {1, -1}, {2, -1}}, {{0, 0}, {0, 1}, {1, 1}, {1, 2}} };
	int N, M, map[500][500], max = 0, total, l;

	cin >> N >> M;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			cin >> map[i][j];
		}
	}

	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			for (int k = 0; k < 19; k++) {
				total = 0;
				for (l = 0; l < 4; l++) {
					if (i + tetromino[k][l][0] < 0 || i + tetromino[k][l][0] >= N ||
						j + tetromino[k][l][1] < 0 || j + tetromino[k][l][1] >= M) {
						break;
					}
					else {
						total += map[i + tetromino[k][l][0]][j + tetromino[k][l][1]];
					}
				}
				if (l == 4 && total > max) {
					max = total;
				}
			}
		}
	}
	cout << max;
	return 0;
}